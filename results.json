[
  {
    "timestamp": "2016-02-03 22:52:51.235412", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6636== Memcheck, a memory error detector\n==6636== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==6636== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==6636== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==6636== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==6636== \n==6636== HEAP SUMMARY:\n==6636==     in use at exit: 0 bytes in 0 blocks\n==6636==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==6636== \n==6636== All heap blocks were freed -- no leaks are possible\n==6636== \n==6636== For counts of detected and suppressed errors, rerun with: -v\n==6636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6678== Memcheck, a memory error detector\n==6678== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==6678== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==6678== Command: ././document_test 3\n==6678== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==6678== \n==6678== HEAP SUMMARY:\n==6678==     in use at exit: 8 bytes in 1 blocks\n==6678==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==6678== \n==6678== LEAK SUMMARY:\n==6678==    definitely lost: 0 bytes in 0 blocks\n==6678==    indirectly lost: 0 bytes in 0 blocks\n==6678==      possibly lost: 0 bytes in 0 blocks\n==6678==    still reachable: 8 bytes in 1 blocks\n==6678==         suppressed: 0 bytes in 0 blocks\n==6678== Reachable blocks (those to which a pointer was found) are not shown.\n==6678== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==6678== \n==6678== For counts of detected and suppressed errors, rerun with: -v\n==6678== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-04 14:44:36.735775", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19290== Memcheck, a memory error detector\n==19290== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==19290== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==19290== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==19290== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==19290== \n==19290== HEAP SUMMARY:\n==19290==     in use at exit: 0 bytes in 0 blocks\n==19290==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==19290== \n==19290== All heap blocks were freed -- no leaks are possible\n==19290== \n==19290== For counts of detected and suppressed errors, rerun with: -v\n==19290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19332== Memcheck, a memory error detector\n==19332== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==19332== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==19332== Command: ././document_test 3\n==19332== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==19332== \n==19332== HEAP SUMMARY:\n==19332==     in use at exit: 8 bytes in 1 blocks\n==19332==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==19332== \n==19332== LEAK SUMMARY:\n==19332==    definitely lost: 0 bytes in 0 blocks\n==19332==    indirectly lost: 0 bytes in 0 blocks\n==19332==      possibly lost: 0 bytes in 0 blocks\n==19332==    still reachable: 8 bytes in 1 blocks\n==19332==         suppressed: 0 bytes in 0 blocks\n==19332== Reachable blocks (those to which a pointer was found) are not shown.\n==19332== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==19332== \n==19332== For counts of detected and suppressed errors, rerun with: -v\n==19332== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-05 02:08:19.350598", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25475== Memcheck, a memory error detector\n==25475== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==25475== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==25475== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==25475== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==25475== \n==25475== HEAP SUMMARY:\n==25475==     in use at exit: 0 bytes in 0 blocks\n==25475==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==25475== \n==25475== All heap blocks were freed -- no leaks are possible\n==25475== \n==25475== For counts of detected and suppressed errors, rerun with: -v\n==25475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25517== Memcheck, a memory error detector\n==25517== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==25517== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==25517== Command: ././document_test 3\n==25517== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==25517== \n==25517== HEAP SUMMARY:\n==25517==     in use at exit: 8 bytes in 1 blocks\n==25517==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==25517== \n==25517== LEAK SUMMARY:\n==25517==    definitely lost: 0 bytes in 0 blocks\n==25517==    indirectly lost: 0 bytes in 0 blocks\n==25517==      possibly lost: 0 bytes in 0 blocks\n==25517==    still reachable: 8 bytes in 1 blocks\n==25517==         suppressed: 0 bytes in 0 blocks\n==25517== Reachable blocks (those to which a pointer was found) are not shown.\n==25517== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==25517== \n==25517== For counts of detected and suppressed errors, rerun with: -v\n==25517== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-06 00:06:46.541728", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==10364== Memcheck, a memory error detector\n==10364== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==10364== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==10364== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==10364== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==10364== \n==10364== HEAP SUMMARY:\n==10364==     in use at exit: 0 bytes in 0 blocks\n==10364==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==10364== \n==10364== All heap blocks were freed -- no leaks are possible\n==10364== \n==10364== For counts of detected and suppressed errors, rerun with: -v\n==10364== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==10406== Memcheck, a memory error detector\n==10406== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==10406== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==10406== Command: ././document_test 3\n==10406== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==10406== \n==10406== HEAP SUMMARY:\n==10406==     in use at exit: 8 bytes in 1 blocks\n==10406==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==10406== \n==10406== LEAK SUMMARY:\n==10406==    definitely lost: 0 bytes in 0 blocks\n==10406==    indirectly lost: 0 bytes in 0 blocks\n==10406==      possibly lost: 0 bytes in 0 blocks\n==10406==    still reachable: 8 bytes in 1 blocks\n==10406==         suppressed: 0 bytes in 0 blocks\n==10406== Reachable blocks (those to which a pointer was found) are not shown.\n==10406== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==10406== \n==10406== For counts of detected and suppressed errors, rerun with: -v\n==10406== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-07 14:50:11.474039", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==15782== Memcheck, a memory error detector\n==15782== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==15782== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==15782== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==15782== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==15782== \n==15782== HEAP SUMMARY:\n==15782==     in use at exit: 0 bytes in 0 blocks\n==15782==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==15782== \n==15782== All heap blocks were freed -- no leaks are possible\n==15782== \n==15782== For counts of detected and suppressed errors, rerun with: -v\n==15782== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==15824== Memcheck, a memory error detector\n==15824== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==15824== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==15824== Command: ././document_test 3\n==15824== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==15824== \n==15824== HEAP SUMMARY:\n==15824==     in use at exit: 8 bytes in 1 blocks\n==15824==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==15824== \n==15824== LEAK SUMMARY:\n==15824==    definitely lost: 0 bytes in 0 blocks\n==15824==    indirectly lost: 0 bytes in 0 blocks\n==15824==      possibly lost: 0 bytes in 0 blocks\n==15824==    still reachable: 8 bytes in 1 blocks\n==15824==         suppressed: 0 bytes in 0 blocks\n==15824== Reachable blocks (those to which a pointer was found) are not shown.\n==15824== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==15824== \n==15824== For counts of detected and suppressed errors, rerun with: -v\n==15824== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:47:43.933198", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:54:26.141483", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:150:3: error: implicit declaration of function 'asser' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  asser(index< vector_size);\n  ^\nvector.c:150:16: error: use of undeclared identifier 'vector_size'; did you mean 'Vector_size'?\n  asser(index< vector_size);\n               ^~~~~~~~~~~\n               Vector_size\nvector.c:37:8: note: 'Vector_size' declared here\nsize_t Vector_size(Vector *vector) {\n       ^\nvector.c:150:14: error: ordered comparison between pointer and integer ('size_t' (aka 'unsigned long') and 'size_t (*)(Vector *)') [-Werror]\n  asser(index< vector_size);\n        ~~~~~^ ~~~~~~~~~~~\nvector.c:154:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:155:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:159:24: error: use of undeclared identifier 'i'\n    free(vector->array[i]);\n                       ^\nvector.c:160:19: error: use of undeclared identifier 'i'\n    vector->array[i]=NULL;\n                  ^\nvector.c:161:31: error: no member named 'siz' in 'Vector'; did you mean 'size'?\n    for(int i=index;i<vector->siz-1;i++)\n                              ^~~\n                              size\n./vector.h:55:10: note: 'size' declared here\n  size_t size;\n         ^\nvector.c:161:22: error: comparison of integers of different signs: 'int' and 'unsigned long' [-Werror,-Wsign-compare]\n    for(int i=index;i<vector->siz-1;i++)\n                    ~^~~~~~~~~~~~~~\n9 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-09 09:03:42.172688", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28902== Memcheck, a memory error detector\n==28902== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28902== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28902== Command: ./mp/vector/svn/kagrawa3/vector/vector_test 18\n==28902== \n==28902== \n==28902== HEAP SUMMARY:\n==28902==     in use at exit: 0 bytes in 0 blocks\n==28902==   total heap usage: 14 allocs, 14 frees, 396 bytes allocated\n==28902== \n==28902== All heap blocks were freed -- no leaks are possible\n==28902== \n==28902== For counts of detected and suppressed errors, rerun with: -v\n==28902== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28932== Memcheck, a memory error detector\n==28932== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28932== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28932== Command: ././document_test 3\n==28932== \n==28932== \n==28932== HEAP SUMMARY:\n==28932==     in use at exit: 0 bytes in 0 blocks\n==28932==   total heap usage: 31 allocs, 31 frees, 2,936 bytes allocated\n==28932== \n==28932== All heap blocks were freed -- no leaks are possible\n==28932== \n==28932== For counts of detected and suppressed errors, rerun with: -v\n==28932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }
]